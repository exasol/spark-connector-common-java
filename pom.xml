<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.exasol</groupId>
    <artifactId>spark-connector-common-java</artifactId>
    <version>2.0.14</version>
    <name>spark-connector-common-java</name>
    <description>An Exasol common library for Apache Spark connectors</description>
    <url>https://github.com/exasol/spark-connector-common-java/</url>
    <parent>
        <artifactId>spark-connector-common-java-generated-parent</artifactId>
        <groupId>com.exasol</groupId>
        <version>2.0.14</version>
        <relativePath>pk_generated_parent.pom</relativePath>
    </parent>
    <properties>
        <java.version>11</java.version>
        <spark.version>3.5.4</spark.version>
        <junit.version>5.11.4</junit.version>
        <mockito.version>5.15.2</mockito.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Pin transitive dependency to avoid CVEs -->
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>4.1.118.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--Transitive dependency update for CVE-2025-53864, unresolved introducers: org.apache.spark:spark-sql_2.13:3.5.4:provided-->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.13.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <!-- Fix java.lang.NoClassDefFoundError: org/apache/commons/lang3/ArrayFill
                at org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.writeEOFRecord(TarArchiveOutputStream.java:677) -->
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.18.0</version>
                <scope>test</scope>
            </dependency>
            <!--Transitive dependency override for CVE-2025-55163, direct dependency: org.apache.spark:spark-sql_2.13:3.5.4:provided-->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http2</artifactId>
                <version>4.2.4.Final</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.exasol</groupId>
            <artifactId>exasol-jdbc</artifactId>
            <version>24.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.exasol</groupId>
            <artifactId>sql-statement-builder-java8</artifactId>
            <version>4.5.4</version>
        </dependency>
        <dependency>
            <groupId>com.exasol</groupId>
            <artifactId>error-reporting-java8</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.13</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
                <exclusion>
                    <!-- Avoid collision with already included jcl-slf4j -->
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.13.16</version>
            <scope>provided</scope>
        </dependency>
        <!-- Upgrade transitive dependency of org.apache.spark:spark-core_2.13 to fix CVE-2022-46751 -->
        <dependency>
            <groupId>org.apache.ivy</groupId>
            <artifactId>ivy</artifactId>
            <version>2.5.3</version>
            <scope>provided</scope>
        </dependency>
        <!-- Upgrade transitive dependency of org.apache.spark:spark-core_2.13 to fix CVE-2023-44981 -->
        <dependency>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
            <version>3.9.3</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- Upgrade transitive dependency of org.apache.spark:spark-core_2.13 to fix CVE-2023-44981 and CVE-2024-47561 -->
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>1.12.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- Upgrade transitive dependency of org.apache.spark:spark-core_2.13 to fix CVE-2023-33546 -->
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>3.1.12</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!-- Upgrade transitive dependency of org.apache.spark:spark-network-common_2.13 to fix CVE-2024-7254 -->
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>4.29.3</version>
            <scope>provided</scope>
        </dependency>
        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>1.20.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.exasol</groupId>
            <artifactId>exasol-testcontainers</artifactId>
            <version>7.1.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.exasol</groupId>
            <artifactId>test-db-builder-java</artifactId>
            <version>3.6.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.exasol</groupId>
            <artifactId>hamcrest-resultset-matcher</artifactId>
            <version>1.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.exasol</groupId>
            <artifactId>java-util-logging-testing</artifactId>
            <version>2.0.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <version>3.19</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- We build for Java 8 but some test dependencies require JDK 11.
                         So we build with JDK 11 and set source and target to 8.
                         This requires excluding compiler warning below. -->
                    <source>8</source>
                    <target>8</target>
                    <compilerArgs>
                        <!-- Excluding "[options] bootstrap class path not set in conjunction with -source 8" -->
                        <arg>-Xlint:all,-processing,-path,-options</arg>
                        <arg>-Werror</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonatype.ossindex.maven</groupId>
                <artifactId>ossindex-maven-plugin</artifactId>
                <configuration>
                    <excludeVulnerabilityIds>
                        <!-- Already fixed in JDBC driver >= 24.2.1 but not property updated in OSS Index. -->
                        <exclude>CVE-2024-55551</exclude>
                    </excludeVulnerabilityIds>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>
                <configuration>
                    <printEqualFiles>false</printEqualFiles>
                    <failBuildInCaseOfEqualContentConflict>false</failBuildInCaseOfEqualContentConflict>
                    <failBuildInCaseOfConflict>false</failBuildInCaseOfConflict>
                    <ignoredResourcePatterns>
                        <ignoredResourcePattern>arrow-git.properties</ignoredResourcePattern>
                        <ignoredResourcePattern>.*\.proto$</ignoredResourcePattern>
                    </ignoredResourcePatterns>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.exasol</groupId>
                <artifactId>project-keeper-maven-plugin</artifactId>
                <version>5.2.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
